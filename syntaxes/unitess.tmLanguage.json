{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Unitess",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#variables"
		},
		{
			"include": "#support"
		},
		{
			"include": "constants"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.unitess",
					"match": "\\b(message|Message|MESSAGE|Tree|tree|treerules|TreeRules|Excel|excel|Correctionconfig|CorrectionGet|correctionget|correctionconfig|LoadReports|loadreports|if|compare|Repeat|repeat|EndRepeat|Endrepeat|endrepeat|StopRepeat|stoprepeat|Stoprepeat|when|default|EndScript|endscript|Endscript|NoRequest|endif|else|Case|case|CaseOne|caseone|EndCase|endcase|Call|call|report|delay|table)\\b"
				},
				{
					"name": "keyword.operator.unitess",
					"match": "\\b(OR|or|AND|and)\\b"
				}
		]
		},
		"storage": {
			"patterns": [
				{
					"name": "storage.type.unitess",
					"match": "\\b(Function|function|EndFunction|endfunction|Interrupt|EndInterrupt|interrupt|endinterrupt)\\b"
				},
				{
					"name": "storage.modifier.unitess",
					"match": "\\b(DriverSet|sqrt|DriverGet|rand|size|mean|max|min|abs|acos|acosh|asin|asinh|atan|ceil|ci|cos|csc|exp|expml|floor|gamma|getexp|getman|int|ln|lnpl|log|log2|sec|si|sin|sinc|sinh|spike|step|tan|tanh|get|median|range|stdev|variance|sortup|sortdown|standart_uncertainty|Pi)\\b"
				}
			]
		},
		"comments": {
			"patterns": [{
				"name": "comment.line.unitess",
				"begin": "#",
				"end": "\n"
			}
			]
		},
		"strings": {
			"name": "string.quoted.double.unitess",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.unitess",
					"match": "\\\\."
				}
			]
		},
		"variables": {
			"patterns": [
				{
					"name": "variable.parameter.unitess",
					"match": "mem_[0-9]{1,4}"
				}
			]
		},
		"support": {
			"patterns": [
				{
					"name": "support.function.unitess",
					"match": "\\b(math|string)\\b"
				}
			]
		},
		"constants": {
			"patterns": [
				{
					"name": "constant.language.unitess",
					"match": "\\b(true|false|TRUE|FALSE)\\b"
				}
			]
		}
	},
	"scopeName": "source.unitess"
}